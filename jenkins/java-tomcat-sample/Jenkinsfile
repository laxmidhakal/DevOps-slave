pipeline {
    agent {
        label 'ubuntu-node'
    }
    environment {
        DOCKER_IMAGE = 'laxmidhakal/jenkin'
    }
    stages {
        stage('Build Application') {
            steps {
                sh 'mvn -f jenkins/java-tomcat-sample/pom.xml clean package'
            }
            post {
                success {
                    echo "Now Archiving the Artifacts...."
                    archiveArtifacts artifacts: '**/*.war'
                }
            }
        }

       
        stage('Create Tomcat Image') {
            agent {
                label 'ubuntu-node'
            }
            steps {
                copyArtifacts filter: '**/*.war', fingerprintArtifacts: true, projectName: env.JOB_NAME, selector: specific(env.BUILD_NUMBER)
                echo "Building docker image"
                sh '''
                original_pwd=$(pwd -P)
                cd jenkins/java-tomcat-sample
                docker build -t localtomcatimage:$BUILD_NUMBER .
                cd $original_pwd
                sh '''
            }
        }

    stage('Push to Docker Hub') {
        steps {

             echo "Logging into Docker Hub..."
        withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
            sh '''
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker images
            '''
        }
        echo "Pushing Docker image to Docker Hub..."
        sh '''
        docker tag localtomcatimage:$BUILD_NUMBER laxmidhakal/jenkin:$BUILD_NUMBER
        docker push laxmidhakal/jenkin:$BUILD_NUMBER
        '''
        
        }
    }


        stage('Deploy to Stagging Env') {
            agent {
                label 'ubuntu-node'
            }
            steps {
                echo "Running app on stagging env"
                sh '''
                docker stop tomcatInstance || true
                docker rm tomcatInstance || true
                docker run -itd --name tomcatInstance -p 8082:8080 localtomcatimg:$BUILD_NUMBER
                sh '''
            }
        }
        // stage('Deploy Production Environment') {
        //     agent {
        //         label 'ubuntu-node'
        //     }
        //     steps {
        //         timeout(time:1, unit:'DAYS'){
        //         input message:'Approve PRODUCTION Deployment?'
        //         }
        //         echo "Running app on Prod env"
        //         sh '''
        //         docker stop tomcatInstanceProd || true
        //         docker rm tomcatInstanceProd || true
        //         docker run -itd --name tomcatInstanceProd -p 8083:8080 localtomcatimg:$BUILD_NUMBER
        //         '''
        //     }
        // }

       
    }

    //  post { 
    //       always { 
    //         mail to: 'laxmidhakal159@gmail.com',
    //         subject: "Job '${JOB_NAME}' (${BUILD_NUMBER}) is waiting for input",
    //         body: "Please go to ${BUILD_URL} and verify the build"
    //       }

    //     success {
    //         mail bcc: '', body: """Hi Team,

    //         Build #$BUILD_NUMBER is successful, please go through the url

    //          $BUILD_URL

    //         and verify the details.

    //         Regards,
    //         DevOps Team""", cc: '', from: '', replyTo: '', subject: 'BUILD SUCCESS NOTIFICATION', to: 'laxmidhakal159@gmail.com'
    //     }
    //     failure {
    //         mail bcc: '', body: """Hi Team,
            
    //       Build #$BUILD_NUMBER is unsuccessful, please go through the url

    //       $BUILD_URL

    //       and verify the details.

    //       Regards,
    //       DevOps Team""", cc: '', from: '', replyTo: '', subject: 'BUILD FAILED NOTIFICATION', to: 'laxmidhakal159@gmail.com'
    //     }
    // }
    





}
