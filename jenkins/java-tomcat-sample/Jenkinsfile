pipeline {
    agent {
        label 'ubuntu-node'
    }
    stages {
        stage('Build Application') {
            steps {
                sh 'mvn -f jenkins/java-tomcat-sample/pom.xml clean package'
            }
            post {
                success {
                    echo "Now Archiving the Artifacts...."
                    archiveArtifacts artifacts: '**/*.war'
                }
            }
        }
        stage('Create Tomcat Image') {
            agent {
                label 'ubuntu-node'
            }
            steps {
                copyArtifacts filter: '**/*.war', fingerprintArtifacts: true, projectName: env.JOB_NAME, selector: specific(env.BUILD_NUMBER)
                echo "Building docker image"
                sh '''
                original_pwd=$(pwd -P)
                cd jenkins/java-tomcat-sample
                docker build -t localtomcatimg:$BUILD_NUMBER .
                cd $original_pwd
                sh '''
            }
        }
        stage('Deploy Production Environment') {
    agent {
        label 'ubuntu-node'
    }
    steps {
        timeout(time: 1, unit: 'DAYS') {
            input message: 'Approve PRODUCTION Deployment?'
        }
        echo "Renaming java-tomcat-maven-example.war to ROOT.war..."
        sh '''
        # Check if the .war file exists in the expected directory
        if [ ! -f target/java-tomcat-maven-example.war ]; then
          echo "ERROR: target/java-tomcat-maven-example.war not found!"
          exit 1
        fi

        # Rename the .war file to ROOT.war
        mv target/java-tomcat-maven-example.war target/ROOT.war

        # Confirm the rename was successful
        if [ ! -f target/ROOT.war ]; then
          echo "ERROR: Failed to rename java-tomcat-maven-example.war to ROOT.war"
          exit 1
        fi
        '''
        echo "Running app on Production environment..."
        sh '''
        # Stop and remove the existing production container if it exists
        docker stop tomcatInstanceProd || true
        docker rm tomcatInstanceProd || true

        # Deploy the renamed ROOT.war using the Tomcat container
        docker run -itd --name tomcatInstanceProd -p 8083:8080 localtomcatimg:$BUILD_NUMBER
        '''
    }
}

    }





}
